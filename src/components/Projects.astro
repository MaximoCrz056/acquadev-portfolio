---
let repos = [];
let error = '';
try {
  const res = await fetch('https://api.github.com/users/MaximoCrz056/repos?sort=updated&per_page=6');
  if (!res.ok) throw new Error('No se pudieron obtener los proyectos');
  repos = await res.json();
} catch (e) {
  error = (e as Error).message;
}
---

<section id="projects" class="w-full max-w-3xl mx-auto px-4 pb-16 animate-fadeIn">
  <h2 class="text-2xl md:text-3xl font-bold text-center mb-8">Last public projects</h2>
  {error && <p class="text-center text-red-400">{error}</p>}
  {!error && repos.length === 0 && <p class="text-center text-white/60">No se encontraron proyectos.</p>}
  {!error && repos.length > 0 && (
    <div class="grid gap-6 md:grid-cols-2">
      {repos.map((repo: { html_url: string | URL | null | undefined; name: unknown; description: any; stargazers_count: unknown; forks_count: unknown; language: unknown; updated_at: string | number | Date; }) => (
        <a href={repo.html_url} target="_blank" rel="noopener" class="block bg-white/5 border border-white/10 rounded-lg p-5 hover:bg-white/10 transition-colors duration-300 shadow-lg">
          <h3 class="font-semibold text-lg mb-2 text-white/90">{repo.name}</h3>
          <p class="text-white/60 text-sm mb-2">{repo.description || 'No description provided'}</p>
          <div class="flex flex-wrap gap-2 text-xs text-white/40">
            <span>‚≠ê {repo.stargazers_count}</span>
            <span>üç¥ {repo.forks_count}</span>
            <span>{repo.language}</span>
            <span>Actualizado: {new Date(repo.updated_at).toLocaleDateString()}</span>
          </div>
        </a>
      ))}
    </div>
  )}
</section>